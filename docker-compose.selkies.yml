version: '3.8'

services:
  # Container Selkies - WebRTC + Playwright
  selkies-service:
    build:
      context: .
      dockerfile: Dockerfile.selkies
      args:
        - BUILDKIT_INLINE_CACHE=1
    container_name: gbp_automation_selkies
    restart: unless-stopped
    init: true
    environment:
      - NODE_ENV=production
      - TZ=America/Sao_Paulo
      - HEADLESS=false
      # Selkies Environment Variables
      - DISPLAY_SIZEW=1920
      - DISPLAY_SIZEH=1080
      - DISPLAY_REFRESH=60
      - DISPLAY_DPI=96
      - SELKIES_ENABLE_BASIC_AUTH=${SELKIES_AUTH_ENABLED:-true}
      - SELKIES_BASIC_AUTH_USER=${SELKIES_USERNAME:-admin}
      - SELKIES_BASIC_AUTH_PASSWORD=${SELKIES_PASSWORD:-changeme123}
      - SELKIES_TURN_SHARED_SECRET=${TURN_SECRET:-$(openssl rand -base64 32)}
      - SELKIES_TURN_USERNAME=${TURN_USERNAME:-selkies}
      - SELKIES_TURN_PASSWORD=${TURN_PASSWORD:-$(openssl rand -base64 16)}
      # Security
      - SELKIES_ENABLE_HTTPS=${ENABLE_HTTPS:-false}
      - SELKIES_WEB_ROOT=${WEB_ROOT:-/}
      # Performance
      - SELKIES_ENCODER=${ENCODER:-nvh264enc}
      - SELKIES_TURN_PROTOCOL=${TURN_PROTOCOL:-udp}
    volumes:
      - playwright_data:/app/data
      - /dev/shm:/dev/shm:rw
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      # Logs externos para monitoramento
      - ./logs:/app/logs:rw
    ports:
      - "${PLAYWRIGHT_PORT:-3002}:3001"    # Playwright API
      - "${SELKIES_PORT:-8081}:8080"       # Selkies WebRTC interface
    # Health Check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

    # Security
    cap_add:
      - SYS_ADMIN
    security_opt:
      - seccomp:unconfined
      - no-new-privileges:true

    # Resource Limits
    deploy:
      resources:
        limits:
          cpus: '${CPU_LIMIT:-3.0}'
          memory: '${MEMORY_LIMIT:-8G}'
        reservations:
          cpus: '${CPU_RESERVED:-2.0}'
          memory: '${MEMORY_RESERVED:-4G}'
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

    # Logging
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

    # Labels for Easypanel
    labels:
      - "com.easypanel.service=gbp-automation"
      - "com.easypanel.project=ample"
      - "com.easypanel.environment=production"

volumes:
  playwright_data:
    driver: local
    driver_opts:
      type: none
      device: ${DATA_PATH:-./data}
      o: bind

networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1500